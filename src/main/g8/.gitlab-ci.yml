# Sample GitLab CI Runner configuration
# By Thanh Nguyen <btnguyen2k@gmail.com>

cache:
  paths:
    - target/

variables:
  ## These variables should bbe set via protected env variables
  #DOCKER_REGISTRY_SERVER: ""
  #DOCKER_REGISTRY_USER: ""
  #DOCKER_REGISTRY_PASSWORD: ""
  ## For private registry, namespace is blank normally.
  ## For public registry (e.g. hub.docker.com), namespace is usually "/username"
  DOCKER_REGISTRY_NAMESPACE: ""

before_script:
  # Setup http proxy if needed
  #- "export http_proxy=http://10.100.100.1:8888"
  #- "export https_proxy=http://10.100.100.1:8888"
  # So that current user, directory and datetime occur in log
  - whoami && pwd && date
  - "export CI_PROJECT_VERSION=`echo $CI_COMMIT_REF_NAME | cut -d'-' -f 2`"
  - "echo CI_PROJECT_VERSION: $CI_COMMIT_REF_NAME --\\> $CI_PROJECT_VERSION"

after_script:

stages:
  - build
  - test
  - docker-build
  - docker-release

build:
  stage: build
  script:
    - whoami && pwd && date
    - sbt -ivy ~/.ivy2/$CI_PROJECT_NAME -Djline.terminal=jline.UnsupportedTerminal clean compile

test:
  stage: test
  only:
    # Run ony if commit has tag release-x.y.z.t or staging-x.y.z.t or test-x.y.z.t
    - /^release-.*$/
    - /^staging-.*$/
    - /^test-.*$/
  script:
    - whoami && pwd && date
    #- sbt -ivy ~/.ivy2/$CI_PROJECT_NAME -Djline.terminal=jline.UnsupportedTerminal test

build docker image:
  stage: docker-build
  only:
    # Run ony if commit has tag release-x.y.z.t or staging-x.y.z.t or test-x.y.z.t
    - /^release-.*$/
    - /^staging-.*$/
    - /^test-.*$/
  script:
    - whoami && pwd && date
    - sbt -ivy ~/.ivy2/$CI_PROJECT_NAME -Djline.terminal=jline.UnsupportedTerminal clean docker:stage
    - docker build --force-rm --squash -t ${DOCKER_REGISTRY_SERVER}${DOCKER_REGISTRY_NAMESPACE}/$CI_PROJECT_NAME:$CI_PROJECT_VERSION ./target/docker/stage
  tags:
    - gitlabci-build
    - java11

push test to docker registry:
  stage: docker-release
  only:
    - /^test-.*$/
  script:
    - whoami && pwd && date
    - docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD $DOCKER_REGISTRY_SERVER
    - docker tag ${DOCKER_REGISTRY_SERVER}${DOCKER_REGISTRY_NAMESPACE}/$CI_PROJECT_NAME:$CI_PROJECT_VERSION ${DOCKER_REGISTRY_SERVER}${DOCKER_REGISTRY_NAMESPACE}/$CI_PROJECT_NAME:$CI_PROJECT_VERSION-test
    - docker push ${DOCKER_REGISTRY_SERVER}${DOCKER_REGISTRY_NAMESPACE}/$CI_PROJECT_NAME:$CI_PROJECT_VERSION-test
  tags:
    - gitlabci-build
    - java11
  when: manual

push staging to docker registry:
  stage: docker-release
  only:
    - /^staging-.*$/
  script:
    - whoami && pwd && date
    - docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD $DOCKER_REGISTRY_SERVER
    - docker tag ${DOCKER_REGISTRY_SERVER}${DOCKER_REGISTRY_NAMESPACE}/$CI_PROJECT_NAME:$CI_PROJECT_VERSION ${DOCKER_REGISTRY_SERVER}${DOCKER_REGISTRY_NAMESPACE}/$CI_PROJECT_NAME:$CI_PROJECT_VERSION-staging
    - docker push ${DOCKER_REGISTRY_SERVER}${DOCKER_REGISTRY_NAMESPACE}/$CI_PROJECT_NAME:$CI_PROJECT_VERSION-staging
  tags:
    - gitlabci-build
    - java11
  when: manual

push release to docker registry:
  stage: docker-release
  only:
    - /^release-.*$/
  script:
    - whoami && pwd && date
    - docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD $DOCKER_REGISTRY_SERVER
    - docker tag ${DOCKER_REGISTRY_SERVER}${DOCKER_REGISTRY_NAMESPACE}/$CI_PROJECT_NAME:$CI_PROJECT_VERSION ${DOCKER_REGISTRY_SERVER}${DOCKER_REGISTRY_NAMESPACE}/$CI_PROJECT_NAME:latest
    - docker push ${DOCKER_REGISTRY_SERVER}${DOCKER_REGISTRY_NAMESPACE}/$CI_PROJECT_NAME:$CI_PROJECT_VERSION
    - docker push ${DOCKER_REGISTRY_SERVER}${DOCKER_REGISTRY_NAMESPACE}/$CI_PROJECT_NAME:latest
  tags:
    - gitlabci-build
    - java11
  when: manual
